{
    "editor.fontSize": 14,

    "C_Cpp.default.cppStandard": "c++11",

    "prettier.singleQuote": true,
    "[javascript][typescript]": {
        "editor.formatOnSave": true,
        "editor.tabSize": 2,
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[html]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[json]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },

    "python.linting.pylintArgs": [
        "--errors-only",
        "--generated-members=numpy.*,torch.*"
    ],

    "trailing-spaces.liveMatching": false,
    "trailing-spaces.trimOnSave": true,
    "trailing-spaces.deleteModifiedLinesOnly": true,

    "vim.disableExtension": false,
    "vim.useSystemClipboard": true,
    "vim.highlightedyank.enable": true,
    "vim.useCtrlKeys": true,
    "vim.handleKeys": {
        "<C-d>": true,
        "<C-k>": false
    },
    "vim.leader": "<Space>",
    "vim.insertModeKeyBindingsNonRecursive": [
        {
            "before": ["j", "k"],
            "after": ["<Esc>"]
        },
        {
            "before": ["k", "j"],
            "after": ["<Esc>"]
        },
    ],
    "vim.normalModeKeyBindingsNonRecursive": [
        // Save and close files easily
        {
            "before": ["<leader>", "q"],
            "after": [":q<CR>"]
        },
        {
            "before": ["<leader>", "w", "w"],
            "after": [":", "w", "<CR>"]
        },
        {
            "before": ["<leader>", "x", "x"],
            "after": [":", "w", "q", "<CR>"]
        },
        // Prevent x and c from overwriting registers/clipboard
        {
            "before": ["x"],
            "after": ["\"", "_", "x"]
        },
        {
            "before": ["c"],
            "after": ["\"", "_", "c"]
        },
        // Make Y consistent with C and D
        {
            "before": ["Y"],
            "after": ["y", "$"]
        },
        // qq to start recording, q to stop, Q to play
        {
            "before": ["Q"],
            "after": ["@", "q"]
        },
        // Find references
        {
            "before": ["g", "r"],
            "commands": ["editor.action.goToReferences"]
        },
        // Rename
        {
            "before": ["<leader>", "r"],
            "commands": ["editor.action.rename"],
        },
        // Emmet
        {
            "before": ["<leader>", "e", "w"],
            "commands": ["editor.emmet.action.wrapWithAbbreviation"],
        },
        {
            "before": ["<leader>", "e", "u"],
            "commands": ["editor.emmet.action.updateTag"],
        },
        // angular2-switcher
        {
            "before":["g", "u"],
            "commands":["extension.switchTs"],
        },
        {
            "before":["g", "i"],
            "commands":["extension.switchTemplate"],
        },
        {
            "before":["g", "o"],
            "commands":["extension.switchStyle"],
        },
        {
            "before":["g", "p"],
            "commands":["extension.switchSpec"],
        }
    ],
    "vim.visualModeKeyBindingsNonRecursive": [
        // Prevent x and c from overwriting registers/clipboard
        {
            "before": ["x"],
            "after": ["\"", "_", "x"]
        },
        {
            "before": ["c"],
            "after": ["\"", "_", "c"]
        },
        // Find references
        {
            "before": ["g", "r"],
            "commands": ["editor.action.goToReferences"]
        },
        // Rename
        {
            "before": ["<leader>", "r"],
            "commands": ["editor.action.rename"],
        },
    ],
    "vim.commandLineModeKeyBindingsNonRecursive": [
        {
            "before": ["j", "k"],
            "after": ["C-c"]
        },
        {
            "before": ["k", "j"],
            "after": ["C-c"]
        },
    ],

    "vscode-neovim.compositeKeys": {
        "jk": {
            "command": "vscode-neovim.lua",
            "args": [
                [
                    "local code = require('vscode')",
                    "code.action('vscode-neovim.escape')",
                ],
            ],
        },
        "kj": {
            "command": "vscode-neovim.lua",
            "args": [
                [
                    "local code = require('vscode')",
                    "code.action('vscode-neovim.escape')",
                ],
            ],
        },
    },
    "vscode-neovim.compositeTimeout": 300,

    "editor.bracketPairColorization.enabled": false,
    "[typescriptreact]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[css]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[jsonc]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "vite.autoStart": false,

    "diffEditor.renderSideBySide": false,
    "editor.inlineSuggest.enabled": true,
    "[python]": {
        "editor.formatOnType": true
    },

    // "editor.snippetSuggestions": "top",

    "extensions.experimental.affinity": {
        "asvetliakov.vscode-neovim": 1
    },
    "editor.stickyScroll.enabled": true,
}
