// Place your key bindings in this file to override the defaults
[
    // Navigate autocompletion menu with ctrk+j/ctrl+k
    {
        "key": "ctrl+j",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+k",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    // Navigate quickOpen panels with ctrl+j/ctrl+k (including command palette)
    {
        "key": "ctrl+j",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    // Smart selection expansion with ctrl+j/ctrl+k
    {
        "key": "ctrl+j",
        "command": "editor.action.smartSelect.expand"
    },
    {
        "key": "ctrl+k",
        "command": "editor.action.smartSelect.shrink"
    },
    // Subword navigation with ctrl+h/ctrl+l
    {
        "key": "ctrl+l",
        "command": "subwordNavigation.cursorSubwordRight",
        "when": "!(editorHasSelection || vim.mode == 'Visual')"
    },
    {
        "key": "ctrl+h",
        "command": "subwordNavigation.cursorSubwordLeft",
        "when": "!(editorHasSelection || vim.mode == 'Visual')"
    },
    {
        "key": "ctrl+l",
        "command": "subwordNavigation.cursorSubwordRightSelect",
        "when": "editorHasSelection || vim.mode == 'Visual'"
    },
    {
        "key": "ctrl+h",
        "command": "subwordNavigation.cursorSubwordLeftSelect",
        "when": "editorHasSelection || vim.mode == 'Visual'"
    },
    // Use ctrl+d on Windows/Linux to expand selection to other occurrences even in vim mode
    {
        "key": "ctrl+d",
        "command": "editor.action.addSelectionToNextFindMatch",
        "when": "!isMac && editorHasSelection"
    },
    {
        "key": "alt+f",
        "command": "editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
        "key": "shift+alt+f",
        "command": "-editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    // vscode-neovim
    // Make cmd+d work correctly in any mode
    // https://github.com/vscode-neovim/vscode-neovim?tab=readme-ov-file#vscodewith_insertcallback-ms
    {
        "key": "cmd+d",
        "command": "vscode-neovim.lua",
        "args": "require('vscode-neovim').with_insert(function() require('vscode-neovim').action('editor.action.addSelectionToNextFindMatch') end)",
        "when": "isMac"
    },
]
